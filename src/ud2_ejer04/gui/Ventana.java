/*
LICENCIA JOSE JAVIER BO
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
Lista de paquetes:
 */
package ud2_ejer04.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 * Ventana de la aplicacion. Contiene un panel de tipo Lienzo que se encarga de
 * gestionar los dibujos. Tambien tiene un Timer para hacer los pasos de
 * fotograma. Cuando timer lanza un actionEvent se recoge y se aumenta la fase
 * de animacion. Esta fase es usada por los dibujos para determinar su estado.
 * 
 * Hay un boton cuyo actionEvent tambien es recogido por esta clase. Sirve para 
 * activar/desactivar el Timer.
 *
 * @author Jose Javier Bailon Ortiz
 * @see Lienzo
 * @see Timer
 */
public class Ventana extends javax.swing.JFrame implements ActionListener {

    /**
     * Frames por segundo
     */
    private final int fps = 60;
    
    /**
     * Duracion de un frame
     */
    private final int msPorFotograma = 1000 / 60;
    
    /**
     * Timer para el paso de fotograma y aumento de fase
     */
    private final Timer reloj;
    
    /**
     * Fase de animacion actual
     */
    public static double fase = 0;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        //crear timer y asociar Ventana como listener
        reloj = new Timer(msPorFotograma, this);
        reloj.setActionCommand("reloj");
        
        //asignar Ventana como listener del boton
        btnControl.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo = new ud2_ejer04.gui.Lienzo();
        btnControl = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        lienzo.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
        );

        btnControl.setText("PLAY");
        btnControl.setActionCommand("playpause");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 408, Short.MAX_VALUE)
                .addComponent(btnControl)
                .addGap(0, 409, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnControl)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnControl;
    private ud2_ejer04.gui.Lienzo lienzo;
    // End of variables declaration//GEN-END:variables

    /**
     * Recoge los eventos ActionEvent de reloj y boton
     * @param e 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {
            //si el evento es del reloj se hace un paso de fotograma
            case "reloj":
                pasoReloj();
                break;
                
            //si el evento es del boton se cambia el estadoplay/pause
            case "playpause":
                togglePlay();
                break;
            default:
                throw new AssertionError();
        }

    }

    /**
     * Cambia el estado del Timer a play o pause
     */
    private void togglePlay() {
        if (reloj.isRunning()) {
            btnControl.setText("PLAY");
            reloj.stop();
        } else {
            btnControl.setText("PAUSE");
            reloj.start();
        }
    }

    /**
     * Calcula el paso de fotograma incrementando la fase y ordenando repintar
     */
    private void pasoReloj() {
        fase += 0.002;
        lienzo.repaint();
    }

}//fin Ventana
